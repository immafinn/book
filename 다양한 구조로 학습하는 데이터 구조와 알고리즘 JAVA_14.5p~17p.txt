1.16 세타 표기법
알고리즘에 점근적으로 접근하여 엄밀한 평균을 찾는다. 점근적 표기법으로 봤을 때 상한과 하한이 같은지를 알 수 있다. 만약 상한과 하한이 같다면 세타의 증가율도 같다. 알고리즘의 수행시간을 최선의 방법으로 구하기 위해 점근적으로 접근하고 있기 때문에, 실제로 문제들을 다루게 될 때는 상한을 더 많이 찾게 될 것이며, 상한과 하한이 같다면 세타 표기법으로 표기하기 때문에 하한은 실제로 자주 보지 않게 될 것이다.

1.17 점근적 분석이라고 불리는 이유?
최선의 방법, 최악의 방법, 평균의 방법으로 접근하는 것은, 해당 알고리즘의 수행속도 f(n)을 그래프 상의 선이라고 가정했을 때 n 입력값에 따라 점근적으로 가까운 그래프를 찾아 상한 혹은 하한 등을 구하고 있다. 따라서 점근적 분석이라고 불리고 있다.

1.18 점근적 분석 가이드라인
실제로 알고리즘 수행속도를 구하기 위해 점근적 가이드라인을 사용해보자.
- 루프
조건문을 포함한 처리 연산을 상수로 두고 loop가 진행되는 최대 횟수를 구하여 곱하면 O(g(n))이 된다.(점근적 상한)

- 중복루프
마찬가지로 조건문을 포함한 처리 연산을 상수로 두고, 안쪽 루프문 부터 loop가 진행되는 최대 횟수를 구하여 곱하고, 다음 루프문에서도 똑같이 하되 loop의 제곱으로 곱하면 O(g(n))이 된다.(점근적 상한)

- 조건절
조건문 true절과 false 절 내부의 조건부와 일반 처리 연산을 상수로 두고, 두 구문의 상수들을 더하면 O(g(n))이 된다.(점근적 상한)